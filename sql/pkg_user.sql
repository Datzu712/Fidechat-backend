CREATE OR REPLACE PACKAGE PKG_USER AS
    -- Public Procedures & functions
    PROCEDURE CREATE_USER(P_ID IN VARCHAR2, P_USERNAME IN VARCHAR2, P_EMAIL IN VARCHAR2, P_IS_BOT IN NUMBER, P_AVATAR_URL IN VARCHAR2);
    PROCEDURE GET_USER(P_ID IN VARCHAR2, CURSOR_OUT OUT SYS_REFCURSOR);
    FUNCTION GET_USER_JSON(P_ID IN VARCHAR2) RETURN CLOB;
    PROCEDURE UPDATE_USER(
        P_ID IN VARCHAR2,
        P_FIELDS IN VARCHAR2
    );
    PROCEDURE DELETE_USER(P_ID IN VARCHAR2);

    -- Custom Exceptions
    USER_NOT_FOUND EXCEPTION;
END PKG_USER;
/

CREATE OR REPLACE PACKAGE BODY PKG_USER AS

    PROCEDURE CREATE_USER(P_ID IN VARCHAR2, P_USERNAME IN VARCHAR2, P_EMAIL IN VARCHAR2, P_IS_BOT IN NUMBER, P_AVATAR_URL IN VARCHAR2) IS
    BEGIN
        INSERT INTO APP_USER (ID, USERNAME, EMAIL, IS_BOT, AVATAR_URL)
        VALUES (P_ID, P_USERNAME, P_EMAIL, P_IS_BOT, P_AVATAR_URL);
    EXCEPTION
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20101, 'Error creating USER: ' || SQLERRM);
    END CREATE_USER;

    PROCEDURE GET_USER(P_ID IN VARCHAR2, CURSOR_OUT OUT SYS_REFCURSOR) IS
    BEGIN
        OPEN CURSOR_OUT FOR
        SELECT * FROM APP_USER WHERE ID = P_ID;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(-20102, 'User not found.');
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20103, 'Error while getting user: ' || SQLERRM);
    END GET_USER;

    FUNCTION GET_USER_JSON(P_ID IN VARCHAR2) RETURN CLOB IS
        v_json CLOB;
    BEGIN
        SELECT JSON_OBJECT(
            'id' VALUE ID,
            'username' VALUE USERNAME,
            'email' VALUE EMAIL,
            'isBot' VALUE IS_BOT,
            'avatarUrl' VALUE AVATAR_URL
        ) INTO v_json
        FROM APP_USER
        WHERE ID = P_ID;

        IF v_json IS NULL THEN
            RAISE_APPLICATION_ERROR(-20102, 'User not found.');
        END IF;

        RETURN v_json;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(-20102, 'User not found.');
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20108, 'Error getting user JSON: ' || SQLERRM);
    END GET_USER_JSON;

    PROCEDURE UPDATE_USER(
        P_ID IN VARCHAR2,
        P_FIELDS IN VARCHAR2
    ) IS
        v_sql VARCHAR2(4000);
    BEGIN
        v_sql := 'UPDATE APP_USER SET ' || P_FIELDS || ' WHERE ID = :1';
        EXECUTE IMMEDIATE v_sql USING P_ID;

        IF SQL%ROWCOUNT = 0 THEN
            RAISE_APPLICATION_ERROR(-20104, 'Could not update USER. User not found for ID: ' || P_ID);
        END IF;

    EXCEPTION
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20105, 'Error updating USER: ' || SQLERRM);
    END UPDATE_USER;

    PROCEDURE DELETE_USER(P_ID IN VARCHAR2) IS
    BEGIN
        DELETE FROM APP_USER WHERE ID = P_ID;

        IF SQL%ROWCOUNT = 0 THEN
            RAISE USER_NOT_FOUND;
        END IF;
    EXCEPTION
        WHEN USER_NOT_FOUND THEN
            RAISE_APPLICATION_ERROR(-20106, 'User not found for deletion.');
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20107, 'Error deleting user: ' || SQLERRM);
    END DELETE_USER;

END PKG_USER;
/